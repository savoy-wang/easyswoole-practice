<?php
/**
 * Created by PhpStorm.
 * User: yf
 * Date: 2017/4/11
 * Time: 下午3:01
 */

namespace Core\Component\Spl;


class SplArray extends \ArrayObject
{
    function __get($name)
    {
        // TODO: Implement __get() method.
        if(!isset($this[$name])){
            return null;
        }
        return $this[$name];
    }

    function getArrayCopy()
    {
        $all = parent::getArrayCopy(); // TODO: Change the autogenerated stub
        foreach ($all as $key => $item){
            if($item instanceof SplArray){
                $all[$key] = $item->getArrayCopy();
            }
        }
        return $all;
    }

    function __set($name, $value)
    {
        // TODO: Implement __set() method.
        $this[$name] = $value;
    }

    function set($path,$value){
        $path = explode(".",$path);
        $temp = $this;
        while ($key = array_shift($path)){
            $temp = &$temp[$key];
        }
        $temp = $value;
    }

    function get($path,$security = false){
        $paths = explode(".",$path);
        $func = function ($data,$pathArr,$security = false)use(&$func){
            $path = array_shift($pathArr);
            if($path == "*"){
                if($security){
                    if(isset($data['*'])){
                        return $data["*"];
                    }
                }
                if(!empty($pathArr)){
                    $temp = [];
                    foreach ($data as $key => $item){
                        if(is_array($item) && !empty($item)){
                            $temp[$key] = $func($item,$pathArr,$security);
                        }
                        //对于非数组无下级则不再搜索
                    }
                    return $temp;
                }else{
                    return $data;
                }
            }else{
                if(isset($data[$path])){
                    if(!empty($pathArr)){
                        //继续搜索。
                        return $func($data[$path],$pathArr,$security);
                    }else{
                        return $data[$path];
                    }
                }else{
                    return null;
                }
            }
        };
        return $func($this->getArrayCopy(),$paths,$security);
    }


    function __toString()
    {
        // TODO: Implement __toString() method.
        return json_encode($this,JSON_UNESCAPED_UNICODE,JSON_UNESCAPED_SLASHES);
    }
}